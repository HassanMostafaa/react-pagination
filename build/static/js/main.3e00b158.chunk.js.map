{"version":3,"sources":["components/Post.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Post","posts","className","map","post","id","title","body","Pagination","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","push","console","log","style","position","bottom","left","padding","borderRadius","background","transform","zIndex","color","length","number","href","onClick","App","useState","setPosts","loading","setLoading","setCurrentPage","useEffect","a","Axios","get","then","res","data","fetchPost","indexOfLastPost","indexOfFirstPost","currentPosts","slice","alert","pageNumber","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAiBeA,EAfF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACE,oBAAIC,UAAU,uBAAd,SACGD,EAAME,KAAI,SAACC,GAAD,OACT,qBAAkBF,UAAU,kBAA5B,UACE,+BACGE,EAAKC,GADR,KACcD,EAAKE,SAEnB,4BAAIF,EAAKG,SAJFH,EAAKC,UC8CPG,G,MAlDI,SAAC,GAGlB,IAH2E,IAAvDC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAClDC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKN,EAAaD,GAAeK,IACzDD,EAAYI,KAAKH,GAGnB,OADAI,QAAQC,IAAIN,GAEV,sBAAKX,UAAU,GAAf,UACE,uBACEkB,MAAO,CACLC,SAAU,QACVC,OAAQ,MACRC,KAAM,MACNC,QAAS,SACTC,aAAc,kBACdC,WAAY,UACZC,UAAW,mBACXC,OAAQ,IACRC,MAAO,QAVX,iBAaUjB,EAbV,eAasCC,EAAYiB,UAElD,oBAAI5B,UAAU,cAAd,SACGW,EAAYV,KAAI,SAAC4B,GAChB,OACE,oBAEE7B,UACEU,IAAgBmB,EAAS,oBAAsB,aAHnD,SAME,mBACEC,KAAK,qBACLC,QAAS,WACPtB,EAASoB,IAEX7B,UAAWU,IAAgBmB,EAAS,cAAgB,YALtD,SAOGA,KAZEA,aCqDJG,MA5Ef,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNlC,EADM,KACCmC,EADD,OAEiBD,oBAAS,GAF1B,mBAENE,EAFM,KAEGC,EAFH,OAGyBH,mBAAS,GAHlC,mBAGNvB,EAHM,KAGO2B,EAHP,OAIUJ,mBAAS,GAAzB1B,EAJM,oBAMb+B,qBAAU,YACO,uCAAG,sBAAAC,EAAA,6DAChBH,GAAW,GADK,SAGVI,IAAMC,IAAI,8CAA8CC,MAC5D,SAACC,GACCT,EAASS,EAAIC,MACbR,GAAW,MANC,2CAAH,qDAUfS,KACC,IAGH,IAAMC,EAAkBpC,EAAcH,EAChCwC,EAAmBD,EAAkBvC,EACrCyC,EAAejD,EAAMkD,MAAMF,EAAkBD,GAuBnD,OACE,qBAAK9C,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,oBAAd,2BACA,cAAC,EAAD,CAAMD,MAAOiD,IAEZb,EACC,oBAAIjB,MAAO,CAAES,MAAO,WAApB,0BAEA,sBAAK3B,UAAU,gBAAf,UACE,qBAAKA,UAAU,OAAO+B,QAAS,WAvBrCmB,MAAM,mBAuBA,kBAIA,cAAC,EAAD,CACEzC,SAlCK,SAAC0C,GAChBd,EAAec,IAkCL5C,aAAcA,EACdC,WAAYT,EAAM6B,OAClBlB,YAAaA,IAEf,qBAAKV,UAAU,OAAO+B,QAAS,WA1BrCmB,MAAM,mBA0BA,2BC7DGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.3e00b158.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Post = ({ posts }) => {\r\n  return (\r\n    <ul className=\"list-group mb-4 post\">\r\n      {posts.map((post) => (\r\n        <li key={post.id} className=\"list-group-item\">\r\n          <h6>\r\n            {post.id}. {post.title}\r\n          </h6>\r\n          <p>{post.body}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, currentPage }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  console.log(pageNumbers);\r\n  return (\r\n    <nav className=\"\">\r\n      <span\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"0px\",\r\n          left: \"50%\",\r\n          padding: \"0 10px\",\r\n          borderRadius: \"10px 10px 0px 0\",\r\n          background: \"#f4f4f4\",\r\n          transform: \"translateX(-50%)\",\r\n          zIndex: \"8\",\r\n          color: \"#333\",\r\n        }}\r\n      >\r\n        &laquo;{currentPage}&raquo; out of {pageNumbers.length}\r\n      </span>\r\n      <ul className=\" pagination\">\r\n        {pageNumbers.map((number) => {\r\n          return (\r\n            <li\r\n              key={number}\r\n              className={\r\n                currentPage === number ? \"page-item active \" : \"page-item \"\r\n              }\r\n            >\r\n              <a\r\n                href=\"javascript:void(0)\"\r\n                onClick={() => {\r\n                  paginate(number);\r\n                }}\r\n                className={currentPage === number ? \"page-link  \" : \"page-link\"}\r\n              >\r\n                {number}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Post from \"./components/Post\";\nimport \"./styles.css\";\nimport Pagination from \"./components/Pagination\";\n// import { pageNumbers } from \"./components/Pagination\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5);\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      setLoading(true);\n\n      await Axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(\n        (res) => {\n          setPosts(res.data);\n          setLoading(false);\n        }\n      );\n    };\n    fetchPost();\n  }, []);\n\n  //GET CURRENT POSTS\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  // console.log(posts);\n\n  //chagnge page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const prevv = (pageNumber) => {\n    if ((pageNumber = 1)) {\n      alert(\"Page Not Found\");\n    } else {\n      setCurrentPage(pageNumber - 1);\n    }\n  };\n  const nextt = (pageNumber) => {\n    if ((pageNumber = 20)) {\n      alert(\"Page Not Found\");\n    } else {\n      setCurrentPage(pageNumber + 1);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container mt-5\">\n        <h1 className=\"text-primary mb-3\">Fetched Posts</h1>\n        <Post posts={currentPosts} />\n\n        {loading ? (\n          <h4 style={{ color: \"#f4f4f4\" }}>LOADING ....</h4>\n        ) : (\n          <div className=\"paginationApp\">\n            <div className=\"prev\" onClick={() => prevv(currentPage)}>\n              &#171;\n            </div>\n\n            <Pagination\n              paginate={paginate}\n              postsPerPage={postsPerPage}\n              totalPosts={posts.length}\n              currentPage={currentPage}\n            />\n            <div className=\"next\" onClick={() => nextt(currentPage)}>\n              &#xbb;\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}